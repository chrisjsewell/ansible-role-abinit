abinit_version: "9.2.1"
abinit_src: abinit-{{ abinit_version }}
abinit_src_archive: "{{ abinit_src }}.tar.gz"
abinit_url: "https://www.abinit.org/sites/default/files/packages/{{ abinit_src_archive }}"
# the standard download URL fails intermittently on CI, therefore we also provide an alternate
abinit_url_alt: https://github.com/marvel-nccr/ansible-role-abinit/releases/download/abinit-src/{{ abinit_src_archive }}
abinit_code_folder: "/tmp"
abinit_built_executable: "{{ abinit_code_folder }}/{{ abinit_src }}/build/src/98_main/abinit"
abinit_prefix: "/usr/local"

# used for make and runtest -j
abinit_build_cpus: 2

# set this for use with the marvel-nccr.libxc role,
# otherwise libxc-dev is installed from apt
# abinit_libxc_path: "{{ libxc_prefix }}"

# this is required for creating aiida codes
abinit_executables:
- name: abinit
  folder: "{{ abinit_prefix }}/bin"
  plugin: abinit

# See https://docs.abinit.org/INSTALL_Ubuntu/
# see also options defined in abinit/config/specs/options.conf
abinit_config_options:
  # mandatory libraries
  # ("yes" means auto-detect or provide a direct path.)
  with_libxc: "{{ abinit_libxc_path | default('yes') }}"
  with_hdf5: "yes"
  with_netcdf: "yes"
  with_netcdf_fortran: "yes"
  # MPI settings
  with_mpi: "yes"
  enable_mpi_io: "yes"
  # linear algebra settings
  with_linalg_flavor: "netlib"
  LINALG_LIBS: "-L/usr/lib/x86_64-linux-gnu -llapack -lblas"

  # by default CFLAGS = CXXFLAGS = "-g -O2 -mtune=native -march=native"
  # but for Docker we do not want to use the spec of the host machine
  # (see https://stackoverflow.com/a/54163496/5033292)
  with_optim_flavor: "{{ 'safe' if (cloud_platform is defined and cloud_platform == 'docker') else 'standard' }}"
  # alternatively you could set:
  # CFLAGS: "-g -O2"
  # CXXFLAGS: "-g -O2"

abinit_tests:
# - atompaw
# - bigdft
# - bigdft_paral
# - built-in
- etsf_io                # ~17s on 2 cpus
- fast                   # ~164s on 2 cpus
# - gpu
- libxc[:4]              # ~24s on 2 cpus
- mpiio                  # ~3s
- paral[1:6]             # ~20s on 2 cpus
# - psml
# - seq
- tutoparal              # 1s
- tutorespfn[1] -k DFPT RTA- EPH_OLD-  # ~125s on 2 cpus
- tutorial -k DFTU       # ~42s on 2 cpus
# - unitary
# - v1
# - v2
# - v3
# - v4
# - v5
# - v6
# - v67mbpt
# - v7
# - v8
# - v9
# - vdwxc
# - wannier90
